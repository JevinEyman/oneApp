{
  "_args": [
    [
      {
        "raw": "react-slick@~0.22.3",
        "scope": null,
        "escapedName": "react-slick",
        "name": "react-slick",
        "rawSpec": "~0.22.3",
        "spec": ">=0.22.3 <0.23.0",
        "type": "range"
      },
      "/Users/christopherfennessey/Documents/School/oneApp/node_modules/antd"
    ]
  ],
  "_from": "react-slick@>=0.22.3 <0.23.0",
  "_id": "react-slick@0.22.3",
  "_inCache": true,
  "_location": "/react-slick",
  "_nodeVersion": "8.9.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-slick_0.22.3_1522042988757_0.8605921311750131"
  },
  "_npmUser": {
    "name": "akiran",
    "email": "kiran@neostack.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-slick@~0.22.3",
    "scope": null,
    "escapedName": "react-slick",
    "name": "react-slick",
    "rawSpec": "~0.22.3",
    "spec": ">=0.22.3 <0.23.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/react-slick/-/react-slick-0.22.3.tgz",
  "_shasum": "667991b2496e6b10bcca2a2e676ffadf34e7d56c",
  "_shrinkwrap": null,
  "_spec": "react-slick@~0.22.3",
  "_where": "/Users/christopherfennessey/Documents/School/oneApp/node_modules/antd",
  "author": {
    "name": "Kiran Abburi"
  },
  "bugs": {
    "url": "https://github.com/akiran/react-slick/issues"
  },
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/react-slick",
    "logo": "https://opencollective.com/opencollective/logo.txt"
  },
  "dependencies": {
    "can-use-dom": "^0.1.0",
    "classnames": "^2.2.5",
    "create-react-class": "^15.5.2",
    "enquire.js": "^2.1.6",
    "json2mq": "^0.2.0",
    "resize-observer-polyfill": "^1.5.0"
  },
  "description": " React port of slick carousel",
  "devDependencies": {
    "autoprefixer": "^7.1.2",
    "babel-cli": "^6.16.0",
    "babel-core": "^6.16.0",
    "babel-eslint": "^7.0.0",
    "babel-jest": "^19.0.0",
    "babel-loader": "^6.2.5",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-assign": "^6.8.0",
    "babel-polyfill": "^6.16.0",
    "babel-preset-airbnb": "^2.1.1",
    "babel-preset-es2015": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "css-loader": "^0.28.0",
    "deepmerge": "^1.1.0",
    "del": "^2.2.2",
    "enzyme": "^3.2.0",
    "enzyme-adapter-react-16": "^1.1.0",
    "es5-shim": "^4.5.9",
    "eslint": "^3.6.1",
    "eslint-plugin-react": "^6.3.0",
    "express": "^4.14.0",
    "foundation-apps": "^1.2.0",
    "gulp": "^3.9.1",
    "gulp-sass": "^3.1.0",
    "jasmine-core": "^2.5.2",
    "jest": "^19.0.2",
    "jquery": "^3.2.1",
    "js-beautify": "^1.7.5",
    "json-loader": "^0.5.4",
    "node-sass": "^4.5.2",
    "postcss-loader": "^1.3.3",
    "raf": "^3.4.0",
    "react": "^16.0.0",
    "react-addons-test-utils": "^15.6.2",
    "react-dom": "^16.0.0",
    "react-test-renderer": "^16.0.0",
    "run-sequence": "^1.2.2",
    "sass-loader": "^6.0.3",
    "sinon": "^2.1.0",
    "slick-carousel": "^1.8.1",
    "style-loader": "^0.16.1",
    "webpack": "^1.13.2",
    "webpack-dev-server": "^1.16.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-4u8/98/2BqdDkLSl3ovKlM+EamzAzAQlZozSZ7WIuw7TnlTFboFR/ntgU0JCnIRSeSj6S5pIa0gxXL8v5XSzfg==",
    "shasum": "667991b2496e6b10bcca2a2e676ffadf34e7d56c",
    "tarball": "https://registry.npmjs.org/react-slick/-/react-slick-0.22.3.tgz",
    "fileCount": 19,
    "unpackedSize": 348344
  },
  "files": [
    "dist",
    "lib"
  ],
  "gitHead": "524675fb2c9ca35aa1aad33cae5581f88a5468cb",
  "homepage": "https://github.com/akiran/react-slick",
  "jest": {
    "setupFiles": [
      "./test-setup.js"
    ],
    "testPathIgnorePatterns": [
      "/__tests__/scripts.js",
      "/__tests__/testUtils.js"
    ]
  },
  "keywords": [
    "slick",
    "carousel",
    "Image slider",
    "orbit",
    "slider",
    "react-component"
  ],
  "license": "MIT",
  "main": "./lib",
  "maintainers": [
    {
      "name": "akiran",
      "email": "kiran.coder0@gmail.com"
    }
  ],
  "name": "react-slick",
  "npmFileMap": [
    {
      "basePath": "/dist/",
      "files": [
        "*.js"
      ]
    }
  ],
  "npmName": "react-slick",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.1 || ^16.0.0",
    "react-dom": "^0.14.0 || ^15.0.1 || ^16.0.0"
  },
  "readme": "### react-slick\n\n[![Backers on Open Collective](https://opencollective.com/react-slick/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/react-slick/sponsors/badge.svg)](#sponsors) [![Join the chat at https://gitter.im/akiran/react-slick](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/akiran/react-slick?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n##### Carousel component built with React. It is a react port of [slick carousel](http://kenwheeler.github.io/slick/)\n\n## [Documentation](http://react-slick.neostack.com)\n\n\n### Installation\n\n**npm**\n```bash\nnpm install react-slick\n```\n**yarn**\n```bash\nyarn add react-slick\n```\n\n⚠️ Also install slick-carousel for css and font\n\n```bash\nnpm install slick-carousel\n@import \"~slick-carousel/slick/slick.css\";\n@import \"~slick-carousel/slick/slick-theme.css\";\n```\n\nBut be aware slick-carousel has a peer-dependancy on jQuery which you, or your colleagues may not like to see in your console output, so you can always grab the CSS from there and convert it into any CSS in JS solution that you might be using.\n\nor add cdn link in your html\n\n```html\n<link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\n```\n\n\n\n### [PlayGround](https://codesandbox.io/s/zzloxr09mp)\nUse [CodeSandbox template](https://codesandbox.io/s/zzloxr09mp) to try react-slick with different settings.\n\n\n<a href=\"https://opencollective.com/react-slick/donate\" target=\"_blank\">\n  <img src=\"https://opencollective.com/react-slick/donate/button@2x.png?color=blue\" width=300 />\n</a>\n\n\n\n### Filing issues\nPlease replicate your issue with [CodeSandbox template](https://codesandbox.io/s/zzloxr09mp) and post it along with issue to make it easy for me to debug.\n\n\n### Starter Kit\nCheckout [yeoman generator](https://github.com/akiran/generator-react-slick) to quickly\nget started with react-slick.\n\n### Example\n\n```js\nimport React from 'react'\nimport Slider from 'react-slick'\n\nclass SimpleSlider extends React.Component {\n  render () {\n    var settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    return (\n      <Slider {...settings}>\n        <div><h3>1</h3></div>\n        <div><h3>2</h3></div>\n        <div><h3>3</h3></div>\n        <div><h3>4</h3></div>\n        <div><h3>5</h3></div>\n        <div><h3>6</h3></div>\n      </Slider>\n    );\n  }\n}\n```\n\n### Props\n\nProps            | Type            | Default Value                   | Description                                                 | Working\n---------------- | --------------- | ------------------------------- | -----------                                                 | -------\n`accessibility`  | `bool`          | `true`                          | Enable tabbing and arrow key navigation                     | Yes\n`adaptiveHeight` | `bool`          | `false`                         | Adjust the slide's height automatically                     | Yes\n`afterChange`    | `func`          | `Default`                       | Index change callback. `index => ...`                       | Yes\n`appendDots`     | `func`          | `dots => <ul>{dots}</ul>`       | Custom dots templates. Works same as customPaging           | Yes\n`arrows`         | `bool`          | `true`                          |                                                             | Yes\n`asNavFor`       | `ref`           | `undefined`                     | provide ref to another slider and sync it with current slider| Yes\n`autoplaySpeed`  | `int`           | `3000`                          | Delay between each auto scroll (in milliseconds)            | Yes\n`autoplay`       | `bool`          | `false`                         |                                                             | Yes\n`beforeChange`   | `func`          | `null`                          | Index change callback. `(oldIndex, newIndex) => ...`        | Yes\n`centerMode`     | `bool`          | `false`                         | Center current slide                                        | Yes\n`centerPadding`  | `string`        | `'50px'`                        |                                                             | Yes\n`className`      | `string`        | `''`                            | CSS class for inner slider div                              | Yes\n`cssEase`        |                 | `'ease'`                        |                                                             | Yes\n`customPaging`   | `func`          | `i => <button>{i + 1}</button>` | Custom paging templates. [Example](examples/CustomPaging.js)| Yes\n`dotsClass`      | `string`        | `'slick-dots'`                  | CSS class for dots                                          | Yes\n`dots`           | `bool`          | `Default`                       |                                                             | Yes\n`draggable`      | `bool`          | `true`                          | Enable scrollable via dragging on desktop                   | Yes\n`easing`         | `string`        | `'linear'`                      |                                                             | Yes\n`fade`           | `bool`          | `Default`                       |                                                             | Yes\n`focusOnSelect`  | `bool`          | `false`                         | Go to slide on click                                        | Yes\n`infinite`       | `bool`          | `true`                          | Infinitely wrap around contents                             | Yes\n`initialSlide`   | `int`           | `0`                             | Index of first slide                                        | Yes\n`lazyLoad`       | `ondemand`/`progressive`| `null`                  | Load images or render components on demand or progressively | Yes\n`nextArrow`      | React Element   | `null`                          | React element for next arrow. [Example](examples/CustomArrows.js)       | Yes\n`onEdge`         | `func`          | `null`                          | Edge dragged event in finite case, `direction => {...}`     | Yes\n`onInit`         | `func`          | `null`                          | componentWillMount callback. `() => void`                   | Yes\n`onLazyLoad`     | `func`          | `null`                          | Callback after slides load lazily `slidesLoaded => {...}`   | Yes\n`onReInit`       | `func`          | `null`                          | componentDidUpdate callback. `() => void`                   | Yes\n`onSwipe`        | `func`          | `null`                          | Callback after slide changes by swiping                     | Yes\n`pauseOnDotsHover`| `bool`         | `false`                         | Prevents autoplay while hovering on dots                    | Yes\n`pauseOnFocus`   | `bool`          | `false`                         | Prevents autoplay while focused on slides                   | Yes\n`pauseOnHover`   | `bool`          | `true`                          | Prevents autoplay while hovering on track                   | Yes\n`prevArrow`      | React Element   | `null`                          | React element for prev arrow. [Example](examples/CustomArrows.js)       | Yes\n`responsive`     | `array`         | `null`                          | Customize based on breakpoints (detailed explanation below) | Yes\n`rtl`            | `bool`          | `false`                         | Reverses the slide order                                    | Yes\n`slide`          | `string`        | `'div'`                         | Slide container type                                        | Yes\n`slidesToScroll` | `int`           | `1`                             | How many slides to scroll at once                           | Yes\n`slidesToShow`   | `int`           | `1`                             | How many slides to show in one frame                        | Yes\n`speed`          | `int`           | `500`                           | Animation speed in milliseconds                             | Yes\n`swipeToSlide`   | `bool`          | `false`                         | Enable drag/swipe irrespective of `slidesToScroll`          | Yes\n`swipe`          | `bool`          | `true`                          | Enable/disable swiping to change slides                     | Yes\n`touchMove`      | `bool`          | `true`                          |                                                             | Yes\n`touchThreshold` | `int`           | `5`                             |                                                             | Yes\n`useCSS`         | `bool`          | `true`                          | Enable/Disable CSS Transitions                              | Yes\n`useTransform`   | `bool`          | `true`                          | Enable/Disable CSS transforms                               | Yes\n`variableWidth`  | `bool`          | `false`                         |                                                             | Yes\n`vertical`       | `bool`          | `false`                         |                                                             | Yes\n\n### Methods\nName              | Arguments       | Description\n------------------|-----------------|-------------------------\n`slickPrev`       | None            | go to previous slide\n`slickNext`       | None            | go to next slide\n`slickGoTo`       | index:number    | go to the given slide index\n`slickPause`      | None            | pause the autoplay\n`slickPlay`       | None            | start the autoplay\n\n\n#### Followings are not going to be implemented\nName              |type             | Reason\n------------------|-----------------|-------------------\n`unslick`         | method          | same functionality can be achieved with `unslick` prop\n`slickSetOption`  | method          | same functionality can be achieved via props and managing state for them in wrapper\n`slickFilter`     | method          | same functionality can be achieved as with dynamic slides, look at dynamic slides [example](https://github.com/akiran/react-slick/blob/master/examples/DynamicSlides.js)\n`slickUnfilter`   | method          | same functionality can be achieved as with dynamic slides, look at dynamic slides [example](https://github.com/akiran/react-slick/blob/master/examples/DynamicSlides.js)\n`slickAdd`        | method          | same functionality can be achieved as with dynamic slides, look at dynamic slides [example](https://github.com/akiran/react-slick/blob/master/examples/DynamicSlides.js)\n`slickRemove`     | method          | same functionality can be achieved as with dynamic slides, look at dynamic slides [example](https://github.com/akiran/react-slick/blob/master/examples/DynamicSlides.js)\n`slickCurrentSlide`| method         | same functionality can be achieved with `beforeChange hook`\n`slickGetOption`  | method          | manage wrapper state for desired options\n`getSlick`        | method          | a simple ref will do\n\n#### `responsive` property\n\nArray of objects in the form of `{ breakpoint: int, settings: { ... } }` The breakpoint _int_ is the `maxWidth` so the settings will be applied when resolution is below this value. Breakpoints in the array should be ordered from smallest to greatest. Use 'unslick' in place of the settings object to disable rendering the carousel at that breakpoint. Example: `[ { breakpoint: 768, settings: { slidesToShow: 3 } }, { breakpoint: 1024, settings: { slidesToShow: 5 } }, { breakpoint: 100000, settings: 'unslick' } ]`\n\n### Custom next/prev arrows\n\nTo customize the next/prev arrow elements, simply create new React components and set them\nas the values of nextArrow and prevArrow.\n\n```js\nclass LeftNavButton extends React.Component {\n  render() {\n    return <button {...this.props}>Next</button>\n  }\n}\n```\n\nImportant: be sure that you pass your component's props to your clickable element\nlike the example above. If you don't, your custom component won't trigger the click handler.\n\nYou can also set `onClick={this.props.onClick}` if you only want to set the click handler.\n\n### Flexbox support\nIf you have flex property on container div of slider, add below css\n```css\n* {\n  min-height: 0;\n  min-width: 0;\n}\n```\n\n### Test Setup\nIf you try to run tests with jest in a project that uses react-slick, you may run into this error\n```\nmatchMedia not present, legacy browsers require a polyfill\n```\n\nTo fix this issue add below snippet in test-setup.js\n```js\nwindow.matchMedia = window.matchMedia || function() {\n    return {\n        matches : false,\n        addListener : function() {},\n        removeListener: function() {}\n    };\n};\n\n```\nand add below jest config in package.json\n```json\n\"jest\": {\n    \"setupFiles\": [\"test-setup.js\"]\n}\n```\n\n\n### Development\nWant to run demos locally\n\n```bash\ngit clone https://github.com/akiran/react-slick\ncd react-slick\nnpm install\nnpm start\nopen http://localhost:8080\n```\n\n### Polyfills for old IE support\n`matchMedia` support from [media-match](https://github.com/weblinc/media-match)\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/akiran/react-slick/graphs/contributors\"><img src=\"https://opencollective.com/react-slick/contributors.svg?width=890\" /></a>\n\n\n## Backers\n\nThank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/react-slick#backer)]\n\n<a href=\"https://opencollective.com/react-slick#backers\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/react-slick#sponsor)]\n\n<a href=\"https://opencollective.com/react-slick/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-slick/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-slick/sponsor/9/avatar.svg\"></a>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/akiran/react-slick.git"
  },
  "scripts": {
    "build": "gulp clean && gulp sass && gulp copy && webpack",
    "lint": "eslint src",
    "prepublish": "babel ./src --out-dir ./lib && gulp dist",
    "start": "gulp server",
    "test": "jest",
    "test:watch": "jest --watch"
  },
  "version": "0.22.3"
}
